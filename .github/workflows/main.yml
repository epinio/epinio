name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
    - 'docs/**'
    - 'README.md'
    - '.goreleaser.yml'
  pull_request:
    branches: [ main ]
    paths-ignore:
    - 'docs/**'
    - 'README.md'
    - '.goreleaser.yml'
  # nightly
  schedule:
    - cron:  '0 0 * * *'

env:
  SETUP_GO_VERSION: '^1.17.2'
  GINKGO_NODES: 8

jobs:
  linter:
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.SETUP_GO_VERSION }}

      - name: Setup Ginkgo Test Framework
        run: go install github.com/onsi/ginkgo/v2/ginkgo@v2.1.1

      - name: Cache Tools
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/tools
          key: ${{ runner.os }}-tools

      - name: Install Tools
        run: make tools-install

      - name: Add Tools to PATH
        run: |
          echo "`pwd`/output/bin" >> $GITHUB_PATH

      - name: Lint Epinio
        run: make lint

      - name: Unit Tests
        run: make test

      - name: Clean all
        if: always()
        uses: colpal/actions-clean@v1

  acceptance-cli:
    needs:
      - linter
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.SETUP_GO_VERSION }}

      - name: Setup Ginkgo Test Framework
        run: go install github.com/onsi/ginkgo/v2/ginkgo@v2.1.1

      - name: Cache Tools
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/tools
          key: ${{ runner.os }}-tools

      - name: Install Tools
        run: make tools-install

      - name: Add Tools to PATH
        run: |
          echo "`pwd`/output/bin" >> $GITHUB_PATH

      - name: CLI Acceptance Tests
        env:
          REGISTRY_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
          EPINIO_TIMEOUT_MULTIPLIER: 3
        run: |
          make acceptance-cluster-setup
          export KUBECONFIG=$PWD/tmp/acceptance-kubeconfig
          make install-cert-manager
          make prepare_environment_k3d
          make test-acceptance-cli

      - name: Cleanup k3d cluster
        if: always()
        run: make acceptance-cluster-delete

      - name: Clean all
        if: always()
        uses: colpal/actions-clean@v1

  acceptance-api:
    needs:
      - linter
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.SETUP_GO_VERSION }}

      - name: Setup Ginkgo Test Framework
        run: go install github.com/onsi/ginkgo/v2/ginkgo@v2.1.1

      - name: Cache Tools
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/tools
          key: ${{ runner.os }}-tools

      - name: Install Tools
        run: make tools-install

      - name: Add Tools to PATH
        run: |
          echo "`pwd`/output/bin" >> $GITHUB_PATH

      - name: API Acceptance Tests
        env:
          REGISTRY_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
          EPINIO_TIMEOUT_MULTIPLIER: 3
        run: |
          make acceptance-cluster-setup
          export KUBECONFIG=$PWD/tmp/acceptance-kubeconfig
          make install-cert-manager
          make prepare_environment_k3d
          make test-acceptance-api

      - name: Cleanup k3d cluster
        if: always()
        run: make acceptance-cluster-delete

      - name: Clean all
        if: always()
        uses: colpal/actions-clean@v1

  acceptance-apps:
    needs:
      - linter
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.SETUP_GO_VERSION }}

      - name: Setup Ginkgo Test Framework
        run: go install github.com/onsi/ginkgo/v2/ginkgo@v2.1.1

      - name: Cache Tools
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/tools
          key: ${{ runner.os }}-tools

      - name: Install Tools
        run: make tools-install

      - name: Add Tools to PATH
        run: |
          echo "`pwd`/output/bin" >> $GITHUB_PATH

      - name: API Acceptance Tests
        env:
          REGISTRY_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
          EPINIO_TIMEOUT_MULTIPLIER: 5
        run: |
          make acceptance-cluster-setup
          export KUBECONFIG=$PWD/tmp/acceptance-kubeconfig
          make install-cert-manager
          make prepare_environment_k3d
          make test-acceptance-apps

      - name: Failure Logs
        if: failure()
        run: |
          mkdir -p tmp
          kubectl get -A pod,service,ingress -o json > tmp/cluster.json
          kubectl get -A events > tmp/events.log
          docker logs k3d-epinio-acceptance-server-0 &> tmp/k3s.log
          docker exec k3d-epinio-acceptance-server-0 sh -c 'cd /var/log/containers; grep -r "." .' > tmp/containers.log

      - name: Upload Logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: acceptance-logs-${{ github.sha }}-${{ github.run_id }}
          path: |
            tmp/*.json
            tmp/*.log
          retention-days: 2

      - name: Cleanup k3d cluster
        if: always()
        run: make acceptance-cluster-delete

      - name: Clean all
        if: always()
        uses: colpal/actions-clean@v1
